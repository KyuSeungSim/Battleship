# -*- coding: utf-8 -*-
"""Assignment1 - KyuSeung.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kYgVW9SBjNGPMkySA1GjAvbFD5nN427D
"""

#Assignment1 - Battleship
#Name: KyuSeung Sim
#Class: COMP SCI 464
#Date: 09/18/2021

from random import randint

# Introduce the Battleship game
print("Welcome to Play Battleship Game")
print("This game is to find battleship")
print("You can have 4 chances to catch my battleship")
print("Row and Column start with 0 to 4")
print()

# My argument is board_in so i chagne name board to board_in.
board_in = []

# Make a board with each rows by '0'
#['O', 'O', 'O', 'O', 'O']
#['O', 'O', 'O', 'O', 'O']
#['O', 'O', 'O', 'O', 'O']
#['O', 'O', 'O', 'O', 'O']
#['O', 'O', 'O', 'O', 'O']
for x in range(5):
  board_in.append(["0"] * 5)

# Make function and print board simply with just 0
# 0 0 0 0 0
# 0 0 0 0 0
# 0 0 0 0 0
# 0 0 0 0 0
# 0 0 0 0 0
def print_board(board_in):
  for row in board_in:
    print (" ".join(row))

# Display board and Turn start with 0
print("Turn 0")
print_board(board_in)

# Make a battleship random place
def random_row(board_in):
  return randint(0, len(board_in) - 1)

def random_col(board_in):
  return randint(0, len(board_in) - 1)

ship_row = random_row(board_in)
ship_col = random_col(board_in)

# Test only where is the ship position.
#print(ship_row)
#print(ship_col)

# This is play game with for loop and range is 4 so 4 times to play it.
# This for loop didn't print turn 0 so I write turn 0.
# Also add try and except to use input checking without int values
for turn in range(4):
  # This is condition for while loop to continue
  valid_Input_Cehck_Row = True
  valid_Input_Cehck_Col = True

  # This is check for Integer values with Row
  while valid_Input_Cehck_Row:
    try:
      guess_row_check = int(input("Guess Row: "))
    except ValueError:
      print("Invalid user Input, Please enter Integer Values")
      continue
    else:
      # guess_row_check is local value
      # Save data guess_row
      guess_row = guess_row_check
      break

  # This is check for Integer values with Col
  while valid_Input_Cehck_Col:
    try:
      guess_col_check = int(input("Guess Col: "))
    except ValueError:
      print("Invalid user Input, Please enter Integer Values")
      continue
    else:
      # guess_col_check is local value
      # Save data guess_col
      guess_col = guess_col_check
      break

  # Check user input and battleship current position.
  # If this position is right then game set to win.
  # If not then go to another statement.
  if guess_row == ship_row and guess_col == ship_col:
      print()
      print("Congratulations! You sank my battleship!")
      # print battleship position with fire emoji to know win the game
      board_in[int(ship_row)][int(ship_col)] = "\U0001f525"
      print_board(board_in)
      break
  else:
      # Check user input range from row and colum setting
      if (guess_row < 0 or guess_row > 4) or (guess_col < 0 or guess_col > 4):
        print()
        print("Oops, that's not even in the ocean.")
      # Check user input and previous input values
      elif (board_in[guess_row][guess_col] == "X"):
        print()
        print("You guessed that one already.")
      # If your input correct and didn't fit to battleship position then execute this code
      else:
        print()
        print("You missed my battleship!")
        # This is show where you mark to catch battleship position.
        board_in[int(guess_row)][int(guess_col)] = "X"
      # This is show how many turns you play right now.
      print()
      print("Turn", turn + 1)
      print_board(board_in)
      # This is user can't catch battleship place.
      # It will show where is battleship with '*' mark with board and position.
      if turn == 3:
        print()
        print("Game Over")
        print("Battleship Position is", ship_row, ",", ship_col)
        board_in[int(ship_row)][int(ship_col)] = "\U0001f6a2"
        print_board(board_in)

